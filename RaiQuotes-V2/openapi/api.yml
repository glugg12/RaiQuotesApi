openapi: "3.0.0"
info:
  title: RaiQuotesV2
  description: A quotes database API for use with RedBot
  version: 0.0.1
servers:
  - url: https://localhost:8080
paths:
  /quotes:
    get:
      summary: Retrieve all quotes
      operationId: getAllQuotesGET
      tags:
        - quote
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QuoteDto"
    post:
      summary: Save a new quote
      operationId: addQuotePOST
      tags:
        - quote
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/AddQuoteRequestDto"
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/QuoteDto"
  /quotes/{id}:
    get:
      summary: Get a quote by Id
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Id of the quote to get
      operationId: getQuoteGET
      tags:
        - quote
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/QuoteDto"
  /quotes/server/{serverId}/random:
    get:
      summary: Get a random quote form a server
      parameters:
        - in: path
          name: serverId
          schema:
            type: string
          required: true
          description: The discord server Id
      operationId: getServerRandomGET
      tags:
        - quote
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/QuoteDto"
  /quotes/server/{serverId}/{id}:
    get:
      summary: Get a quote by its server quote id
      parameters:
        - in: path
          name: serverId
          schema:
            type: string
          required: true
          description: The discord server Id
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The quote's server Id
      operationId: getQuoteFromServerGET
      tags:
        - quote
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/QuoteDto"
    delete:
      summary: Delete a quote from the server
      parameters:
        - in: path
          name: serverId
          schema:
            type: string
          required: true
          description: The discord server Id
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The quote's server Id
      operationId: deleteQuoteByServerQuoteIdDELETE
      tags:
        - quote
      responses:
        "200":
          description: OK
  /quotes/server/{serverId}/author/{authorId}:
    get:
      summary: Get a quote author's total quotes attributed to them
      parameters:
        - in: path
          name: serverId
          schema:
            type: string
          required: true
          description: The discord server Id
        - in: path
          name: authorId
          schema:
            type: string
          required: true
          description: The author's discord Id
      operationId: getAuthorTotalGET
      tags:
        - quote
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/AuthorTotalDto"
  /quotes/server/{serverId}/remix:
    get:
      summary: Remix Quotes on the server
      parameters:
        - in: path
          name: serverId
          schema:
            type: string
          required: true
          description: The discord server Id
        - in: query
          name: quoteId
          schema:
            type: integer
          description: the quote id to use for the quote
        - in: query
          name: authorId
          schema:
            type: string
          description: the author to pull quotes from
      operationId: remixQuoteGET
      tags:
        - quote
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/RemixQuoteDto"
  /quotes/server/{serverId}/remix/{id}:
    get:
      summary: Remix Quotes on the server
      parameters:
        - in: path
          name: serverId
          schema:
            type: string
          required: true
          description: The discord server Id
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The server quote ID to remix
      operationId: remixQuoteIDGET
      tags:
        - quote
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/RemixQuoteDto"
  /quotes/server/{serverId}/remix/{authorId}:
    get:
      summary: Remix Quotes on the server
      parameters:
        - in: path
          name: serverId
          schema:
            type: string
          required: true
          description: The discord server Id
        - in: path
          name: authorId
          schema:
            type: string
          required: true
          description: The author discord ID to pull quotes from
      operationId: remixQuoteAuthorGET
      tags:
        - quote
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/RemixQuoteDto"
components:
  schemas:
    ApiError:
      type: object
      properties:
        title:
          type: string
        message:
          type: string
        detail:
          type: string
    QuoteDto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        serverQuoteId:
          type: integer
          example: 1
        quote:
          type: string
          example: "quote"
        serverId:
          type: string
          example: "012345678"
        addedBy:
          type: string
          example: "012345678"
        authorId:
          type: string
          example: "012345678"
        author_name:
          type: string
          example: "Example"
        dateAdded:
          type: string
          example: "<DATE>"
        imageUrl:
          type: string
          example: "https://animage.com"
    AddQuoteRequestDto:
      type: object
      properties:
        quote:
          type: string
          example: "quote"
        serverId:
          type: string
          example: "012345678"
        addedBy:
          type: string
          example: "012345678"
        authorId:
          type: string
          example: "012345678"
        authorName:
          type: string
          example: "Example"
        date:
          type: string
          example: "<DATE>"
        imageUrl:
          type: string
          example: "https://animage.com"
    AuthorTotalDto:
      type: object
      properties:
        serverId:
          type: string
          example: "1234565677"
        authorId:
          type: string
          example: "012345678"
        timesQuoted:
          type: integer
          example: 1
    RemixQuoteDto:
      type: object
      properties:
        author1:
          type: string
          example: "0192901381"
        author2:
          type: string
          example: "9097986076"
        quoteId1:
          type: integer
          example: 1
        quoteId2:
          type: integer
          example: 1
        quote:
          type: string
          example: "A quote"